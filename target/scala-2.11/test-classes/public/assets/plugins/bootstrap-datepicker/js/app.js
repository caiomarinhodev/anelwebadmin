// Generated by CoffeeScript 1.6.3
var checkPosition, degrees_per_step, drawLoader, drawProgress, full_progress, init, label_interval, max_progress, max_spins, max_time_to_update, min_progress, progress, progress_interval, showDaily30s, time_to_update, toggleVideo, updateDays;

min_progress = 8;

max_progress = 29;

max_spins = 1;

full_progress = 30;

degrees_per_step = 2;

max_time_to_update = 3;

progress = Math.floor(Math.random() * (max_progress - min_progress)) + min_progress;

time_to_update = (progress / full_progress) * max_time_to_update;

label_interval = (time_to_update / progress) * 1000;

progress_interval = (time_to_update * 1000) / (360 / degrees_per_step);

init = function() {
  var loaderTimeout;
  updateDays('week');
  loaderTimeout = setTimeout((function() {
    return drawLoader('spinner', 'circle', 'label', max_spins, progress);
  }), 1000);
  return window.onscroll = checkPosition;
};

checkPosition = function() {
  var body, doc, top;
  doc = document.documentElement;
  body = document.body;
  top = doc && doc.scrollTop || body && body.scrollTop || 0;
  if ((top > document.getElementById('move').offsetTop - 100) && !window.passedMove) {
    window.passedMove = true;
    drawProgress(40, 'circle30', 'label30');
  }
  if (top > document.getElementById('motivate').offsetTop - 100 && !window.passedMotivate) {
    window.passedMotivate = true;
    showDaily30s('week');
    return window.onscroll = null;
  }
};

toggleVideo = function(videodiv, headline) {
  var video;
  video = document.getElementById(videodiv);
  headline = document.getElementById(headline);
  if (video.style.display === 'block') {
    video.style.display = 'none';
    return headline.style.opacity = 1;
  } else {
    video.style.display = 'block';
    return headline.style.opacity = 0;
  }
};

updateDays = function(weekdiv) {
  var currentDay, d, day, dayDivs, div, elementCount, weekday, _i, _len, _results;
  d = new Date();
  weekday = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
  div = document.getElementById(weekdiv);
  dayDivs = div.children;
  currentDay = d.getDay();
  weekday[currentDay] = 'Today';
  elementCount = 0;
  _results = [];
  for (_i = 0, _len = dayDivs.length; _i < _len; _i++) {
    day = dayDivs[_i];
    if (currentDay < 6) {
      currentDay++;
    } else {
      currentDay = 0;
    }
    if (elementCount < 6) {
      dayDivs[elementCount].innerHTML = weekday[currentDay];
    } else {
      dayDivs[elementCount].innerHTML = weekday[currentDay];
      dayDivs[elementCount].setAttribute('class', 'today');
    }
    _results.push(elementCount++);
  }
  return _results;
};

showDaily30s = function(weekdiv) {
  var day, dayDivs, div, elementCount, randomnumber, _i, _len, _results;
  div = document.getElementById(weekdiv);
  dayDivs = div.children;
  elementCount = 0;
  _results = [];
  for (_i = 0, _len = dayDivs.length; _i < _len; _i++) {
    day = dayDivs[_i];
    randomnumber = Math.floor(Math.random() * 5);
    if (randomnumber !== 0 && elementCount < 6) {
      dayDivs[elementCount].setAttribute('class', 'daily30');
    }
    _results.push(elementCount++);
  }
  return _results;
};

drawLoader = function(loading_circle, progress_circle, progress_label, max_spins, progress) {
  var angle, i, j, progressInterval, radius, spinner, start_angle, title, title_min_left;
  spinner = document.getElementById(loading_circle);
  spinner.style.opacity = 1;
  title = document.getElementById("progress_title");
  title_min_left = document.getElementById("progress_min_left");
  radius = 78;
  start_angle = angle = -90;
  i = j = 0;
  max_spins = max_spins;
  return progressInterval = setInterval((function() {
    var d, radians, x, y;
    angle += 2.5 / .99;
    angle %= 360;
    radians = (angle / 180) * Math.PI;
    x = 100 + Math.cos(radians) * radius;
    y = 100 + Math.sin(radians) * radius;
    d = "M" + x + 1 + "," + y + 1 + " " + " L " + x + " " + y;
    spinner.setAttribute("d", d);
    i++;
    if (angle >= 360 - 90) {
      j++;
      if (j >= max_spins) {
        clearTimeout(progressInterval);
        spinner.style.opacity = 0;
      } else {
        angle = start_angle;
      }
      if ((j >= max_spins) && (parseInt(title_min_left.innerHTML) === 30)) {
        title_min_left.innerHTML = full_progress - progress;
        title.style.opacity = 1;
        return drawProgress(progress, progress_circle, progress_label);
      }
    }
  }), 15);
};

drawProgress = function(progress, progress_circle, progress_label) {
  var angle, circle, i, j, label, progressInterval, radius, running_time, start_angle;
  circle = document.getElementById(progress_circle);
  label = document.getElementById(progress_label);
  radius = 92;
  label.style.opacity = 1;
  start_angle = angle = -90;
  i = j = 0;
  running_time = 0;
  return progressInterval = setInterval((function() {
    var badge, currentProgress, d, e, radians, x, y;
    angle += degrees_per_step;
    angle %= 360;
    radians = (angle / 180) * Math.PI;
    x = 100 + Math.cos(radians) * radius;
    y = 100 + Math.sin(radians) * radius;
    e = circle.getAttribute("d");
    if (i === 0) {
      d = e + " M " + x + " " + y;
    } else {
      d = e + " L " + x + " " + y;
    }
    if ((angle >= (progress / full_progress * 360) - 90) || (angle >= 270)) {
      clearInterval(progressInterval);
    }
    if (angle >= 270) {
      circle.style.stroke = '#ff6200';
      badge = document.createElement('div');
      badge.setAttribute('class', 'badge30');
      circle.parentNode.parentNode.appendChild(badge);
      badge.style.opacity = 1;
    }
    circle.setAttribute("d", d);
    i++;
    running_time += progress_interval;
    currentProgress = parseInt(Math.round(running_time / (time_to_update * 1000) * full_progress));
    return label.innerHTML = currentProgress;
  }), progress_interval);
};
